extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.7", 
        import: ["@key", "@shareable", "@external"])

enum Role {
  ADMIN
  HOST
  GUEST
}

# SCALARS
scalar DateTime
scalar _Any

input SignInInput {
  email: String!
  password: String!
}

input SignUpInput {
  email: String!
  password: String!
  name: String!
  nickname: String!
  role: Role = GUEST
  picture: String
  inviteCode: String
}

input UpdatePasswordInput {
  userId: ID!
  newPassword: String!
  password: String!
}

interface Node {
  id: ID!
}

"The response after updating a profile"
type UpdateProfileResponse implements Response {
  code: Int!  @shareable
  success: Boolean!  @shareable
  message: String!  @shareable
  user: User @shareable
}

"Fields that can be updated"
input UpdateProfileInput {
  name: String
  picture: String
  description: String
}

interface Response {
  code: Int! 
  success: Boolean! 
  message: String! 
}

interface User {
  id: ID!
  name: String!
  role: Role!
  picture: String
  nickname: String!
}

type SignInResponse implements Response {
  code: Int! @shareable
  success: Boolean! @shareable
  message: String! @shareable
  token: String! @shareable
  userId: ID! @shareable
  role: Role @shareable
}

type AuthPayload @key(fields: "userId") {
  token: String! @shareable 
  userId: ID! @shareable
  role: Role @shareable
}

type Guest implements User @key(fields: "id")  {
  id: ID!
  name: String! @shareable
  picture: String @shareable
  nickname: String! @shareable
  role: Role! @shareable
}

type Host implements User @key(fields: "id")  {
  id: ID!
  name: String! @shareable
  picture: String @shareable
  description: String @shareable
  nickname: String! @shareable
  role: Role! @shareable
}

type _Service {
  sdl: String
}

union _Entity = Host | Guest | Generator

type Query {
  getUser(id: ID!): User @shareable
}

type Generator {
  id: ID! @shareable
  name: String! @shareable
  description: String @shareable
  createdAt: DateTime! @shareable
  createdBy: User! @shareable
  isActive: Boolean! @shareable
}

type ReqResetPwdResponse implements Response {
  message: String! @shareable
  code: Int! @shareable
  success: Boolean! @shareable
  authPayload: AuthPayload! @shareable
}

type ForgotPasswordResponse implements Response {
  code: Int! @shareable
  success: Boolean! @shareable
  message: String! @shareable
  email: String! @shareable
}

type InviteCodeResponse implements Response {
  code: Int! @shareable
  success: Boolean! @shareable
  message: String! @shareable
}

type Mutation {
  signUp(input: SignUpInput!): AuthPayload! @shareable
  signIn(input: SignInInput!): SignInResponse! @shareable
  requestResetPassword(email: String!): ReqResetPwdResponse! @shareable
  logout: Boolean! @shareable
  forgotPassword(email: String!): ForgotPasswordResponse! @shareable
  updatePassword(newPassword: String!, password: String!, userId: ID!): AuthPayload! @shareable
  sendInviteCode(email: String!): InviteCodeResponse! @shareable
  updateProfile(updateProfileInput: UpdateProfileInput): UpdateProfileResponse! @shareable
}
