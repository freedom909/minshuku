extend schema
  @link(
    url: "https://specs.apollo.dev/federation/v2.5"
    import: ["@key", "@shareable"]
  )

### Queries
type Query {
  "Returns a list of reviews for a given listing"
  searchReviews(criteria: SearchReviewsInput!): [Review]
}

### Mutations
type Mutation {
  "Creates a review for the guest - must be authored by the host of a past booking"
  submitGuestReview(
    guestReview: ReviewInput!
    bookingId: ID!
  ): SubmitGuestReviewResponse!

  "Creates a review for the host and location - only authorized users (hosts) can submit"
  submitHostAndLocationReviews(
    bookingId: ID!
    hostReview: ReviewInput!
    locationReview: ReviewInput!
  ): SubmitHostAndLocationReviewsResponse!
}

### Reviews
type Review @key(fields: "id") {
  id: ID!
  rating: Float! @shareable
  content: String! @shareable
  author: User! @shareable
  bookingId: ID! @shareable
  locationId: ID @shareable
  guestId: ID @shareable
  hostId: ID @shareable
  location: Location @shareable
  createdAt: String! @shareable
  updatedAt: String! @shareable
  round: Int! @shareable
  likes: [Like!] 
  dislikes: [Like!] 
  likesCount: Int!
  dislikesCount: Int!
  title: String! @shareable
  isFeatured: Boolean! @shareable
  isPinned: Boolean! @shareable
  "to allow users to comment on reviews"
  comment: Comment 
}

### Likes
type Like {
  id: ID!
  userId: ID!
  reviewId: ID!
  createdAt: String!
  updatedAt: String!
  isLiked: Boolean! 
}

### Location Type
type Location @key(fields: "id") {
  id: ID! @shareable
  name: String! @shareable
}

### Input Types
input ReviewInput {
  content: String!
  rating: Float!
  locationId: ID
  guestId: ID
  bookingId: ID
  round: Int!
  hostId: ID
}

input SearchReviewsInput {
  guestId: ID
  authorId: ID
  listingId: ID
  hostId: ID
  targetType: String
  comment: String
  # Add other filters as needed
}

### Response Types
type SubmitHostAndLocationReviewsResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  hostReview: Review
  locationReview: Review
}

type SubmitGuestReviewResponse implements MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
  guestReview: Review
}

interface MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
}

### Bookings
type Booking @key(fields: "id") {
  id: ID!
}

### Listings
type Listing @key(fields: "id") {
  id: ID!
}

### User Types
interface User {
  id: ID!
  name: String!
  picture: String
}

type Host implements User @key(fields: "id") {
  id: ID!
  name: String! @shareable
  overallRating: Float @shareable
  picture: String @shareable

}

type Guest implements User @key(fields: "id") {
  id: ID! @shareable 
  name: String! @shareable
  picture: String @shareable
}

type Comment @key(fields: "id") {
  id: ID!
  text: String! @shareable
  guest: Guest! @shareable
}